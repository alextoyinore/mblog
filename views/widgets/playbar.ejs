<!-- Floating Play Bar - Fixed Position -->
<div
class="backdrop-blur-sm fixed bottom-0 left-0 right-0 w-full bg-white dark:bg-gray-900 border-t dark:border-gray-700 z-50"
>
<div class="container mx-auto px-5 h-16">
  <div class="flex items-center justify-between dark:text-gray-500 h-full text-xs">
    <!-- Now Playing - Left Side -->
    <div class="flex items-center min-w-0 cursor-pointer" id="nowPlayingDiv">
      <img
        src="https://images.unsplash.com/photo-1741192223245-46cbbe8ae332"
        alt="Now Playing"
        class="w-12 h-12 object-cover rounded"
      />
      <div class="ml-3 min-w-0">
        <h3 class="text-sm font-medium dark:text-white truncate">
          Currently Playing Track
        </h3>
        <p class="text-xs text-gray-500 dark:text-gray-400 truncate">
          Artist Name
        </p>
      </div>
    </div>

    <!-- Controls - Right Side -->
    <div class="playbar flex min-w-0 items-center justify-center space-x-4 p-4  text-gray-600">
      <button id="prevButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200">
        <!-- Previous Icon -->
        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 18l-6-6 6-6" />
        </svg>
      </button>
      <button id="playButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200 text-lg">
        <!-- Play Icon (Larger) -->
        <svg class="h-10 w-10" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </button>
      <button id="nextButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200">
        <!-- Next Icon -->
        <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 18l6-6-6-6" />
        </svg>
      </button>
      
      <div class="flex items-center">
        <input type="range" id="seeker" class="w-64 h-1 bg-gray-600 rounded-lg appearance-none cursor-pointer" value="0" min="0" max="100" />
        <span id="currentTime" class="ml-2">0:00</span> / <span id="duration" class="ml-2">0:00</span>
      </div>
    </div>

    <div class="flex min-w-0 items-center justify-between gap-5">
      <div class="flex min-w-[60px] items-center justify-between">
        <button id="likeButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200">
          <!-- Like Icon -->
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
          </svg>
        </button>
        <button id="shareButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200">
          <!-- Share Icon -->
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12h4m-2-2v4m-4-4l-4 4m4-4l-4-4" />
          </svg>
        </button>
        <button id="addToPlaylistButton" class="bg-transparent dark:text-white hover:text-gray-400 transition duration-200">
          <!-- Add to Playlist Icon -->
          <svg class="h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h18v18H3V3z" />
          </svg>
        </button>
      </div>
     
      <!-- Volume Control -->
      <div class="flex items-center">
        <i class="fas fa-volume-down"></i>
        <input type="range" id="volumeControl" class="w-24 h-1 bg-gray-600 rounded-lg appearance-none cursor-pointer mx-2" value="100" min="0" max="100" />
        <i class="fas fa-volume-up"></i>
      </div>
    </div>
  </div>
</div>
</div>



<script>
const audio = new Audio('path/to/your/audio/file.mp3'); // Replace with your audio file path
const playButton = document.getElementById('playButton');
const prevButton = document.getElementById('prevButton');
const nextButton = document.getElementById('nextButton');
const seeker = document.getElementById('seeker');
const currentTimeDisplay = document.getElementById('currentTime');
const durationDisplay = document.getElementById('duration');
const volumeControl = document.getElementById('volumeControl');
const nowPlayingDiv = document.getElementById('nowPlayingDiv');
const fullscreenModal = document.getElementById('fullscreenModal');
const closeModal = document.getElementById('closeModal');

playButton.addEventListener('click', () => {
  if (audio.paused) {
    audio.play();
    playButton.innerHTML = '<svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" /><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>';
  } else {
    audio.pause();
    playButton.innerHTML = '<svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" /></svg>';
  }
});

audio.addEventListener('loadedmetadata', () => {
  durationDisplay.textContent = formatTime(audio.duration);
  seeker.max = audio.duration;
});

audio.addEventListener('timeupdate', () => {
  currentTimeDisplay.textContent = formatTime(audio.currentTime);
  seeker.value = audio.currentTime;
});

seeker.addEventListener('input', () => {
  audio.currentTime = seeker.value;
});

volumeControl.addEventListener('input', () => {
  audio.volume = volumeControl.value / 100;
});

nowPlayingDiv.addEventListener('click', () => {
    fullscreenModal.classList.remove('hidden');
});

closeModal.addEventListener('click', () => {
    fullscreenModal.classList.add('hidden');
});

// Optional: Close modal when clicking outside of it
fullscreenModal.addEventListener('click', (event) => {
    if (event.target === fullscreenModal) {
        fullscreenModal.classList.add('hidden');
    }
});

function formatTime(seconds) {
  const minutes = Math.floor(seconds / 60);
  const secs = Math.floor(seconds % 60);
  return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
}
</script>

<style>
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; /* Remove default styling */
  appearance: none;
  width: 15px; /* Thumb width */
  height: 15px; /* Thumb height */
  background: #f56565; /* Red-500 color */
  border-radius: 50%; /* Round thumb */
  cursor: pointer;
}

input[type="range"]::-moz-range-thumb {
  width: 15px; /* Thumb width */
  height: 15px; /* Thumb height */
  background: #f56565; /* Red-500 color */
  border-radius: 50%; /* Round thumb */
  cursor: pointer;
}

input[type="range"]::-ms-thumb {
  width: 15px; /* Thumb width */
  height: 15px; /* Thumb height */
  background: #f56565; /* Red-500 color */
  border-radius: 50%; /* Round thumb */
  cursor: pointer;
}

/* Optional: Add some styles for the modal */
#fullscreenModal {
    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 50;
}
</style>

