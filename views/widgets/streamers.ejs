<div class="accordion-content hidden pl-8 text-xs transition-all duration-300 ease-in-out max-h-0 overflow-hidden">
    <div class="flex items-center gap-4 flex-wrap py-4 border-b border-gray-200 dark:border-gray-800 justify-center">
        <% if (song.songFile && song.songFile.url) { %>
            <button
                onclick="handlePlayClick(this, '<%= song._id %>', '<%= song.songFile.url %>', '<%= song.songTitle %>', '<%= song.artistName %>', '<%= song.artwork.url %>')" 
                class="play-button bg-red-500 text-white px-5 py-1 rounded hover:bg-red-600 transition-colors cursor-pointer flex items-center gap-2"
                data-song-id="<%= song._id %>">
                <svg class="play-icon w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M8 5v14l11-7z"/>
                </svg>
                <svg class="pause-icon w-4 h-4 hidden" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
                </svg>
                <span class="button-text">Play</span>
            </button>
        <% } %>

        <% if (song.spotify) { %>
            <a target="_blank" 
               href="<%= song.spotify %>" 
               onclick="incrementPlays('<%= song.id %>')" class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Spotify
            </a>
        <% } %> 

        <% if (song.youtubeMusic) { %>
            <a target="_blank" 
               href="<%= song.youtubeMusic %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                YouTube Music
            </a>
        <% } %> 

        <% if (song.appleMusic) { %>
            <a target="_blank" 
               href="<%= song.appleMusic %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Apple Music
            </a>
        <% } %> 

        <% if (song.boomplay) { %>
            <a target="_blank" 
               href="<%= song.boomplay %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Boomplay
            </a>
        <% } %> 

        <% if (song.tidal) { %>
            <a target="_blank" 
               href="<%= song.tidal %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Tidal
            </a>
        <% } %> 

        <% if (song.amazon) { %>
            <a target="_blank" 
               href="<%= song.amazon %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Amazon
            </a>
        <% } %> 

        <% if (song.pandora) { %>
            <a target="_blank" 
               href="<%= song.pandora %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Pandora
            </a>
        <% } %> 

        <% if (song.soundcloud) { %>
            <a target="_blank" 
               href="<%= song.soundcloud %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                SoundCloud
            </a>
        <% } %> 

        <% if (song.audiomack) { %>
            <a target="_blank" 
               href="<%= song.audiomack %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Audiomack
            </a>
        <% } %> 

        <% if (song.deezer) { %>
            <a target="_blank" 
               href="<%= song.deezer %>"
               onclick="incrementPlays('<%= song.id %>')"  
               class="text-gray-600 dark:text-gray-500 hover:text-red-500 dark:hover:text-red-500">
                Deezer
            </a>
        <% } %>

        <a href="/song/<%= song.id %>" 
           class="text-blue-600 dark:text-gray-500 hover:text-sky-500 dark:hover:text-sky-500">
            View
        </a>
    </div>
</div>

<script>
function handlePlayClick(button, songId, songUrl, songTitle, artistName, artworkUrl) {
    const buttonText = button.querySelector('.button-text');
    const playIcon = button.querySelector('.play-icon');
    const pauseIcon = button.querySelector('.pause-icon');
    
    if (currentAudio && currentAudio.dataset.songId === songId && !currentAudio.paused) {
        // Pause current song
        currentAudio.pause();
        buttonText.textContent = 'Play';
        playIcon.classList.remove('hidden');
        pauseIcon.classList.add('hidden');
        if (miniPlayer) {
            miniPlayer.classList.add('translate-y-full');
        }
    } else {
        // Stop any currently playing song
        if (currentAudio && currentAudio.dataset.songId !== songId) {
            currentAudio.pause();
            // Reset previous button if exists
            const prevButton = document.querySelector(`button[data-song-id="${currentAudio.dataset.songId}"]`);
            if (prevButton) {
                prevButton.querySelector('.button-text').textContent = 'Play';
                prevButton.querySelector('.play-icon').classList.remove('hidden');
                prevButton.querySelector('.pause-icon').classList.add('hidden');
            }
        }

        // Create new audio or play current
        if (!currentAudio || currentAudio.dataset.songId !== songId) {
            currentAudio = new Audio(songUrl);
            currentAudio.dataset.songId = songId;
        }

        // Play the audio
        currentAudio.play().then(() => {
            buttonText.textContent = 'Pause';
            playIcon.classList.add('hidden');
            pauseIcon.classList.remove('hidden');
            
            // Create/show mini player
            createMiniPlayer(songId, songTitle, artistName, artworkUrl);
            
            // Set up time update handler for progress
            currentAudio.addEventListener('timeupdate', () => {
                if (miniPlayer) {
                    const progress = (currentAudio.currentTime / currentAudio.duration) * 100;
                    const seekerProgress = miniPlayer.querySelector('.seeker-progress');
                    if (seekerProgress) {
                        seekerProgress.style.width = `${progress}%`;
                    }
                    
                    const timeDisplay = miniPlayer.querySelector('.time-display');
                    if (timeDisplay) {
                        const minutes = Math.floor(currentAudio.currentTime / 60);
                        const seconds = Math.floor(currentAudio.currentTime % 60).toString().padStart(2, '0');
                        timeDisplay.textContent = `${minutes}:${seconds}`;
                    }
                }
            });

            // Handle song end
            currentAudio.addEventListener('ended', () => {
                if (!isLooping) {
                    buttonText.textContent = 'Play';
                    playIcon.classList.remove('hidden');
                    pauseIcon.classList.add('hidden');
                    if (miniPlayer) {
                        miniPlayer.classList.add('translate-y-full');
                    }
                }
            });
        }).catch(error => {
            console.error('Error playing audio:', error);
            buttonText.textContent = 'Play';
            playIcon.classList.remove('hidden');
            pauseIcon.classList.add('hidden');
        });
    }
}

// Make sure these variables are defined globally
if (typeof currentAudio === 'undefined') {
    var currentAudio = null;
}
if (typeof miniPlayer === 'undefined') {
    var miniPlayer = null;
}
if (typeof isLooping === 'undefined') {
    var isLooping = false;
}
</script>

<style>
.accordion-content {
    transition: max-height 0.3s ease-in-out;
}

.play-button {
    transition: all 0.2s ease-in-out;
}

.play-button:hover {
    transform: translateY(-1px);
}

.play-button:active {
    transform: translateY(0);
}
</style>
